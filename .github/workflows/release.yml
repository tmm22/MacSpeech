name: Create Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: macos-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - name: Set up Swift
        uses: swift-actions/setup-swift@v1
      
      - name: Get version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV
      
      - name: Build App
        run: |
          chmod +x build.sh
          ./build.sh
      
      - name: Create Release Assets
        run: |
          cd Build
          zip "MacSpeechApp-${{ env.VERSION }}.zip" MacSpeechApp.dmg
      
      - name: Generate Release Notes
        id: release_notes
        run: |
          # Get commit messages since last tag
          PREVIOUS_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
          
          # Function to extract commits by type
          extract_commits() {
            local type=$1
            local pattern=$2
            local commits=$3
            local matches=$(echo "$commits" | grep -i "^$pattern" || true)
            if [ ! -z "$matches" ]; then
              echo "### $type"
              echo ""
              echo "$matches" | sed -E "s/^$pattern[[:space:]]*/- /"
              echo ""
            fi
          }
          
          if [ -z "$PREVIOUS_TAG" ]; then
            COMMITS=$(git log --pretty=format:"%s")
          else
            COMMITS=$(git log --pretty=format:"%s" $PREVIOUS_TAG..HEAD)
          fi
          
          {
            echo "# MacSpeechApp ${{ env.VERSION }}"
            echo ""
            extract_commits "🚀 New Features" "feat:|feature:|add:" "$COMMITS"
            extract_commits "🐛 Bug Fixes" "fix:|bug:|patch:" "$COMMITS"
            extract_commits "📝 Documentation" "docs:|doc:" "$COMMITS"
            extract_commits "🔧 Maintenance" "chore:|refactor:|style:|test:" "$COMMITS"
            extract_commits "⚡️ Performance" "perf:|optimize:" "$COMMITS"
            echo "## Installation"
            echo ""
            echo "1. Download MacSpeechApp.dmg"
            echo "2. Open the DMG file"
            echo "3. Drag MacSpeechApp to your Applications folder"
            echo "4. Launch and enter your OpenAI API key"
            echo ""
            echo "## Requirements"
            echo ""
            echo "- macOS 11.0 or later"
            echo "- OpenAI API key"
          } > release_notes.md
      
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          name: "MacSpeechApp ${{ env.VERSION }}"
          body_path: release_notes.md
          draft: false
          prerelease: false
          files: |
            Build/MacSpeechApp.dmg
            Build/MacSpeechApp-${{ env.VERSION }}.zip 